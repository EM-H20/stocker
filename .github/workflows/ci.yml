name: CI Pipeline
on:
  push:
    branches: [ main, develop, euimin ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: "🔍 Code Quality Check"
    runs-on: ubuntu-latest
    steps:
    - name: 📚 Checkout repository
      uses: actions/checkout@v4

    - name: 🔧 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: 'stable'
        channel: 'stable'
        cache: true

    - name: 📦 Cache pub dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.pub-cache
          .dart_tool
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-

    - name: 🚀 Get dependencies
      run: flutter pub get

    - name: 🔍 Check code formatting
      run: |
        echo "🎨 Checking Dart code formatting..."
        if dart format --set-exit-if-changed .; then
          echo "✅ All files are properly formatted!"
        else
          echo "❌ Some files need formatting. Please run 'dart format .' locally."
          exit 1
        fi

    - name: 🕵️ Analyze code quality
      run: |
        echo "🔍 Running Flutter analyze..."
        flutter analyze --fatal-infos

    - name: 📝 Generate analysis report
      if: always()
      run: |
        flutter analyze --write=analysis_output.txt || true
        echo "## 📊 Analysis Report" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        cat analysis_output.txt >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

  test:
    name: "🧪 Test Suite"
    runs-on: ubuntu-latest
    needs: code-quality
    strategy:
      matrix:
        flutter-version: ['3.24.x', 'stable']
      fail-fast: false
    
    steps:
    - name: 📚 Checkout repository
      uses: actions/checkout@v4

    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: 🔧 Setup Flutter ${{ matrix.flutter-version }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ matrix.flutter-version }}
        channel: 'stable'
        cache: true

    - name: 📦 Cache pub dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.pub-cache
          .dart_tool
        key: ${{ runner.os }}-pub-${{ matrix.flutter-version }}-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-${{ matrix.flutter-version }}-
          ${{ runner.os }}-pub-

    - name: 🔍 Verify Flutter installation
      run: flutter doctor -v

    - name: 🚀 Get dependencies
      run: flutter pub get

    - name: 🧪 Run tests
      run: |
        echo "🧪 Running Flutter tests..."
        flutter test --coverage --reporter=json > test_results.json || true
        if [ -f test_results.json ]; then
          echo "📊 Test results generated!"
        fi

    - name: 📊 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.flutter-version }}
        path: |
          test_results.json
          coverage/
        retention-days: 7

    - name: 📈 Test Summary
      if: always()
      run: |
        echo "## 🧪 Test Results for Flutter ${{ matrix.flutter-version }}" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Tests completed" >> $GITHUB_STEP_SUMMARY
        if [ -f coverage/lcov.info ]; then
          echo "- 📊 Coverage report generated" >> $GITHUB_STEP_SUMMARY
        fi

  build:
    name: "🏗️ Build Check"
    runs-on: ubuntu-latest
    needs: [code-quality, test]
    if: always() && (needs.code-quality.result == 'success')
    
    steps:
    - name: 📚 Checkout repository
      uses: actions/checkout@v4

    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: 🔧 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: 'stable'
        channel: 'stable'
        cache: true

    - name: 📦 Cache pub dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.pub-cache
          .dart_tool
        key: ${{ runner.os }}-pub-build-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-pub-build-
          ${{ runner.os }}-pub-

    - name: 🚀 Get dependencies
      run: flutter pub get

    - name: 🏗️ Build debug APK
      run: |
        echo "🏗️ Building debug APK..."
        flutter build apk --debug
        echo "✅ Debug APK build completed!"

    - name: 💾 Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: build/app/outputs/flutter-apk/app-debug.apk
        retention-days: 7

    - name: 📱 Build Summary
      run: |
        APK_SIZE=$(du -h build/app/outputs/flutter-apk/app-debug.apk | cut -f1)
        echo "## 🏗️ Build Results" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Debug APK built successfully" >> $GITHUB_STEP_SUMMARY
        echo "- 📱 APK Size: $APK_SIZE" >> $GITHUB_STEP_SUMMARY
        echo "- 📦 Artifact uploaded for download" >> $GITHUB_STEP_SUMMARY